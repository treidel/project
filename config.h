#ifndef _CONFIG_H_
#define _CONFIG_H_

///////////////////////////////////////////////////////////////////////////////
// includes
///////////////////////////////////////////////////////////////////////////////

#include "common.h"

///////////////////////////////////////////////////////////////////////////////
// macros 
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// forward declarations
///////////////////////////////////////////////////////////////////////////////

struct collection_item;

///////////////////////////////////////////////////////////////////////////////
// class declaration
///////////////////////////////////////////////////////////////////////////////

class Config
{


///////////////////////////////////////////////////////////////////////////////
// type definitions
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// public function declarations 
///////////////////////////////////////////////////////////////////////////////

public:

    static ResultCode init(const char *configpath_p);
    static Config *get_instance_p();

///////////////////////////////////////////////////////////////////////////////
// protected function declarations 
///////////////////////////////////////////////////////////////////////////////

protected:

///////////////////////////////////////////////////////////////////////////////
// private function declarations 
///////////////////////////////////////////////////////////////////////////////

private:
    Config(struct collection_item *collection_p);
    ~Config();

///////////////////////////////////////////////////////////////////////////////
//declarations 
///////////////////////////////////////////////////////////////////////////////

private:
    static Config *g_instance_p;

    struct collection_item *m_collection_p;

};

#endif

