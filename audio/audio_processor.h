#ifndef _AUDIO_PROCESSOR_H_
#define _AUDIO_PROCESSOR_H_

#include "common.h"
#include "audio_channel.h"
#include "audio_capturemgr.h"

#include <ev.h>

///////////////////////////////////////////////////////////////////////////////
// macros
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// forward declarations
///////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////
// class definition
///////////////////////////////////////////////////////////////////////////////

class AUDIOProcessor : public AUDIOCaptureManager::Handler
{

///////////////////////////////////////////////////////////////////////////////
// type definitions
///////////////////////////////////////////////////////////////////////////////

public:

	typedef union 
	{
		AUDIOChannel::Sample peak;
	} Data;

	class Handler 
	{
	public:
		virtual ResultCode handle_results(const size_t num_results, const Data results[]) = 0;
	};

///////////////////////////////////////////////////////////////////////////////
// public function declarations
///////////////////////////////////////////////////////////////////////////////

public:
	AUDIOProcessor(Handler *handler_p);
	virtual ~AUDIOProcessor();

///////////////////////////////////////////////////////////////////////////////
// AUDIOCaptureManager::Handler declarations
///////////////////////////////////////////////////////////////////////////////

public:
	virtual ResultCode handle_samples(AUDIOChannel::Index index, const size_t buffer_length, AUDIOChannel::Sample *buffer_p);

///////////////////////////////////////////////////////////////////////////////
// private function declarations
///////////////////////////////////////////////////////////////////////////////

private:
	static void timer_cb(struct ev_loop *loop, struct ev_timer *w, int revents);


///////////////////////////////////////////////////////////////////////////////
// private variable definitions
///////////////////////////////////////////////////////////////////////////////

private:
	struct ev_loop *m_loop_p;
	struct ev_timer m_timer;
	Handler *m_handler_p;
	Data *m_channel_data;
};

#endif
