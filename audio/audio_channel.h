#ifndef _AUDIO_CHANNEL_H_
#define _AUDIO_CHANNEL_H_

#include "common.h"

#include <ev.h>

///////////////////////////////////////////////////////////////////////////////
// macros
///////////////////////////////////////////////////////////////////////////////

#define AUDIO_CHANNEL_ZERO_LEVEL	(0)

///////////////////////////////////////////////////////////////////////////////
// forward declarations
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// class defition
///////////////////////////////////////////////////////////////////////////////

class AUDIOChannel
{

///////////////////////////////////////////////////////////////////////////////
// type defitions
///////////////////////////////////////////////////////////////////////////////

public:
	typedef uint16_t Index;
	typedef int16_t Sample;
	typedef float NormalizedSample;

///////////////////////////////////////////////////////////////////////////////
// public function declarations
///////////////////////////////////////////////////////////////////////////////

public:

	static NormalizedSample convertToNormalized(Sample sample);

	AUDIOChannel(Index index);
	virtual ~AUDIOChannel();

	Index getIndex() 
	{
		return m_index;
	}

	int getReadFD() 
	{
		return m_read_fd;
	}

	int getWriteFD() 
	{
		return m_write_fd;
	}

///////////////////////////////////////////////////////////////////////////////
// inner class declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// private function declarations
///////////////////////////////////////////////////////////////////////////////

private: 

	static void read_cb(struct ev_loop *loop_p, struct ev_io *w, int revents);

///////////////////////////////////////////////////////////////////////////////
// private variable definitions
///////////////////////////////////////////////////////////////////////////////

private:
	Index m_index;
	int m_read_fd;
	int m_write_fd;
	struct ev_loop *m_loop_p;
	struct ev_io m_watcher;
};
#endif
