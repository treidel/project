///////////////////////////////////////////////////////////////////////////////
// includes
///////////////////////////////////////////////////////////////////////////////

#include "app_sppconnector.h"
#include "control/control.h"
#include "audio/audio_processor.h"

///////////////////////////////////////////////////////////////////////////////
// macros
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// type defintions
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// constants
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// module variables
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// private function declarations
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// public function implementations
///////////////////////////////////////////////////////////////////////////////

SPPConnector::SPPConnector(APPManager::NotificationHandler *handler_p) :
	m_control_p(new Control(handler_p)),
	m_processor_p(new AUDIOProcessor(m_control_p))
{
}

SPPConnector::~SPPConnector() 
{
	delete m_processor_p;
	delete m_control_p;
}

///////////////////////////////////////////////////////////////////////////////
// APPManager::RequestHandler implementations
///////////////////////////////////////////////////////////////////////////////

ResultCode SPPConnector::handle_request(const APPManager::Message *request_p, APPManager::Message **response_pp)
{
	// pass thru the request to the control object
	return m_control_p->handle_request(request_p, response_pp);
}



